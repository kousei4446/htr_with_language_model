resume:
save: './temp.pt'

device: 'cuda:0'

# datasets
data:
  path: './data/IAM/processed_lines'

# preprocessing
preproc:
  image_height: 128
  image_width: 1024

# architecture
arch: 
  cnn_cfg: [[2, 64], 'M', [3, 128], 'M', [2, 256]]
  head_type: 'both'  # select from 'both' (rnn + cnn shortcut), 'rnn', 'cnn'
  rnn_type: 'lstm'
  rnn_layers: 3
  rnn_hidden_size: 256
  flattening: 'maxpool'
  stn: False

# training
train:
  lr: 1e-3
  num_epochs: 800
  batch_size: 8
  scheduler: 'mstep'  # right now only 'mstep' is supported, i.e. multistep
  save_every_k_epochs: 50
  num_workers: 0      # ★ LLMモデルの多重ロード防止のため0に設定
  llm_interval: 32    # ← LLMを間引く間隔（32ステップに1回に変更して高速化）
  alpha_llm: 0.01     # ← LLM損失の重み（k倍スケーリング削除により大幅に減らす）
  llm_warmup_epochs: 3  # ← 最初の3エポックはLLM損失を徐々に増やす
  log_dir: runs/htr
  use_tensorboard: true

# evaluation
eval:
  batch_size: 8
  num_workers: 0      # ★ LLMモデルの多重ロード防止のため0に設定
  wer_mode: 'tokenizer' # select from 'tokenizer', 'space'


# model saving and logging
model:
  save_dir: './saved_models/llm'
